{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":13177960,"sourceType":"datasetVersion","datasetId":8350728},{"sourceId":13180091,"sourceType":"datasetVersion","datasetId":8352319},{"sourceId":13189516,"sourceType":"datasetVersion","datasetId":8358424}],"dockerImageVersionId":31090,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!git clone https://github.com/NVlabs/stylegan3.git","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-28T10:00:15.116705Z","iopub.execute_input":"2025-09-28T10:00:15.117307Z","iopub.status.idle":"2025-09-28T10:00:16.119020Z","shell.execute_reply.started":"2025-09-28T10:00:15.117279Z","shell.execute_reply":"2025-09-28T10:00:16.118063Z"}},"outputs":[{"name":"stdout","text":"Cloning into 'stylegan3'...\nremote: Enumerating objects: 212, done.\u001b[K\nremote: Counting objects: 100% (166/166), done.\u001b[K\nremote: Compressing objects: 100% (70/70), done.\u001b[K\nremote: Total 212 (delta 101), reused 96 (delta 96), pack-reused 46 (from 1)\u001b[K\nReceiving objects: 100% (212/212), 4.16 MiB | 21.41 MiB/s, done.\nResolving deltas: 100% (107/107), done.\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"# 改变当前目录到项目文件夹\nimport os\nos.chdir('/kaggle/working/stylegan3')\n\n# 验证一下当前目录\nprint(\"当前目录:\", os.getcwd())\n# 列出文件，确认项目文件都在\nprint(os.listdir())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-28T10:00:27.319134Z","iopub.execute_input":"2025-09-28T10:00:27.319475Z","iopub.status.idle":"2025-09-28T10:00:27.325387Z","shell.execute_reply.started":"2025-09-28T10:00:27.319428Z","shell.execute_reply":"2025-09-28T10:00:27.324666Z"}},"outputs":[{"name":"stdout","text":"当前目录: /kaggle/working/stylegan3\n['train.py', '.git', 'Dockerfile', 'gui_utils', 'torch_utils', 'avg_spectra.py', 'README.md', 'legacy.py', 'dnnlib', 'environment.yml', '.github', 'metrics', 'gen_video.py', 'LICENSE.txt', 'visualizer.py', 'viz', 'dataset_tool.py', 'gen_images.py', 'docs', 'calc_metrics.py', 'training']\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"import numpy\nimport click\nimport PIL\nimport scipy\nimport requests\nimport tqdm\nimport ninja\nimport matplotlib\nimport imageio\nimport imgui\nimport glfw\nimport OpenGL\nimport imageio_ffmpeg\nimport pyspng\n\nprint(\"numpy版本:\", numpy.__version__)\nprint(\"click版本:\", click.__version__)\nprint(\"pillow版本:\", PIL.__version__)\nprint(\"scipy版本:\", scipy.__version__)\nprint(\"requests版本:\", requests.__version__)\nprint(\"tqdm版本:\", tqdm.__version__)\nprint(\"ninja版本:\", ninja.__version__)\nprint(\"matplotlib版本:\", matplotlib.__version__)\nprint(\"imageio版本:\", imageio.__version__)\nprint(\"imgui版本:\", imgui.__version__)\nprint(\"glfw版本:\", glfw.__version__)\nprint(\"pyopengl版本:\", OpenGL.__version__)\nprint(\"imageio-ffmpeg版本:\", imageio_ffmpeg.__version__)\nprint(\"pyspng版本:\", pyspng.__version__)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-28T10:00:50.471837Z","iopub.execute_input":"2025-09-28T10:00:50.472643Z","iopub.status.idle":"2025-09-28T10:00:50.503852Z","shell.execute_reply.started":"2025-09-28T10:00:50.472609Z","shell.execute_reply":"2025-09-28T10:00:50.502714Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_36/3983827358.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mimageio\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mimgui\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mglfw\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mOpenGL\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mimageio_ffmpeg\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'glfw'"],"ename":"ModuleNotFoundError","evalue":"No module named 'glfw'","output_type":"error"}],"execution_count":5},{"cell_type":"code","source":"!pip install imgui\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-28T10:00:38.689186Z","iopub.execute_input":"2025-09-28T10:00:38.689820Z","iopub.status.idle":"2025-09-28T10:00:43.629859Z","shell.execute_reply.started":"2025-09-28T10:00:38.689794Z","shell.execute_reply":"2025-09-28T10:00:43.628912Z"}},"outputs":[{"name":"stdout","text":"Collecting imgui\n  Downloading imgui-2.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.0 kB)\nDownloading imgui-2.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.7 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.7/7.7 MB\u001b[0m \u001b[31m55.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hInstalling collected packages: imgui\nSuccessfully installed imgui-2.0.0\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"# 根据environment.yml安装主要的依赖包（注意版本以兼容 Kaggle 环境）\n# !pip install numpy>=1.20\n# !pip install click>=8.0\n# !pip install pillow==8.3.1\n# !pip install scipy==1.7.1\n# !pip install requests==2.26.0\n# !pip install tqdm==4.62.2\n# !pip install ninja==1.10.2\n# !pip install matplotlib==3.4.2\n# !pip install imageio==2.9.0\n\n#!pip install imgui\n!pip install glfw==2.2.0\n!pip install pyopengl==3.1.5\n!pip install imageio-ffmpeg==0.4.3\n!pip install pyspng\n\n# PyTorch 在 Kaggle 中已经预装，通常不需要重新安装\n# 如果需要特定版本，可以这样安装：\n# !pip install torch==1.9.1+cu111 -f https://download.pytorch.org/whl/torch_stable.html","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-28T10:01:38.943205Z","iopub.execute_input":"2025-09-28T10:01:38.943748Z","iopub.status.idle":"2025-09-28T10:01:58.915503Z","shell.execute_reply.started":"2025-09-28T10:01:38.943726Z","shell.execute_reply":"2025-09-28T10:01:58.914582Z"}},"outputs":[{"name":"stdout","text":"Collecting glfw==2.2.0\n  Downloading glfw-2.2.0-py2.py27.py3.py30.py31.py32.py33.py34.py35.py36.py37.py38-none-manylinux2014_x86_64.whl.metadata (4.3 kB)\nDownloading glfw-2.2.0-py2.py27.py3.py30.py31.py32.py33.py34.py35.py36.py37.py38-none-manylinux2014_x86_64.whl (204 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m204.8/204.8 kB\u001b[0m \u001b[31m5.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m\n\u001b[?25hInstalling collected packages: glfw\nSuccessfully installed glfw-2.2.0\nCollecting pyopengl==3.1.5\n  Downloading PyOpenGL-3.1.5-py3-none-any.whl.metadata (3.2 kB)\nDownloading PyOpenGL-3.1.5-py3-none-any.whl (2.4 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.4/2.4 MB\u001b[0m \u001b[31m29.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hInstalling collected packages: pyopengl\n  Attempting uninstall: pyopengl\n    Found existing installation: PyOpenGL 3.1.9\n    Uninstalling PyOpenGL-3.1.9:\n      Successfully uninstalled PyOpenGL-3.1.9\nSuccessfully installed pyopengl-3.1.5\nCollecting imageio-ffmpeg==0.4.3\n  Downloading imageio_ffmpeg-0.4.3-py3-none-manylinux2010_x86_64.whl.metadata (1.6 kB)\nDownloading imageio_ffmpeg-0.4.3-py3-none-manylinux2010_x86_64.whl (26.9 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m26.9/26.9 MB\u001b[0m \u001b[31m59.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hInstalling collected packages: imageio-ffmpeg\n  Attempting uninstall: imageio-ffmpeg\n    Found existing installation: imageio-ffmpeg 0.6.0\n    Uninstalling imageio-ffmpeg-0.6.0:\n      Successfully uninstalled imageio-ffmpeg-0.6.0\nSuccessfully installed imageio-ffmpeg-0.4.3\nCollecting pyspng\n  Downloading pyspng-0.1.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.0 kB)\nRequirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from pyspng) (1.26.4)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.11/dist-packages (from numpy->pyspng) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.11/dist-packages (from numpy->pyspng) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.11/dist-packages (from numpy->pyspng) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.11/dist-packages (from numpy->pyspng) (2025.2.0)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.11/dist-packages (from numpy->pyspng) (2022.2.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.11/dist-packages (from numpy->pyspng) (2.4.1)\nRequirement already satisfied: intel-openmp<2026,>=2024 in /usr/local/lib/python3.11/dist-packages (from mkl->numpy->pyspng) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.11/dist-packages (from mkl->numpy->pyspng) (2022.2.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.11/dist-packages (from tbb==2022.*->mkl->numpy->pyspng) (1.4.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.11/dist-packages (from mkl_umath->numpy->pyspng) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.11/dist-packages (from intel-openmp<2026,>=2024->mkl->numpy->pyspng) (2024.2.0)\nDownloading pyspng-0.1.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (196 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m196.1/196.1 kB\u001b[0m \u001b[31m5.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m\n\u001b[?25hInstalling collected packages: pyspng\nSuccessfully installed pyspng-0.1.3\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"import torch\nprint(\"PyTorch版本:\", torch.__version__)\nprint(\"CUDA available:\", torch.cuda.is_available())\n\nimport PIL\nprint(\"Pillow版本:\", PIL.__version__)\n\nimport scipy\nprint(\"SciPy版本:\", scipy.__version__)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-28T10:02:06.556842Z","iopub.execute_input":"2025-09-28T10:02:06.557199Z","iopub.status.idle":"2025-09-28T10:02:10.776297Z","shell.execute_reply.started":"2025-09-28T10:02:06.557166Z","shell.execute_reply":"2025-09-28T10:02:10.775651Z"}},"outputs":[{"name":"stdout","text":"PyTorch版本: 2.6.0+cu124\nCUDA available: True\nPillow版本: 11.2.1\nSciPy版本: 1.15.3\n","output_type":"stream"}],"execution_count":7},{"cell_type":"markdown","source":"#以下为训练部分# ","metadata":{}},{"cell_type":"markdown","source":"👇此code块是用dataset_tool.py将数据打包","metadata":{}},{"cell_type":"code","source":"import subprocess\nimport os\nfrom PIL import Image\nfrom tqdm import tqdm\n\n\n# 先将图片自动处理为RGB模式（默认为RGBA）\n# 1. 定义路径\ninput_dir = \"/kaggle/input/ruishou/ruishou\"  # 原始图像目录\ntemp_rgb_dir = \"/kaggle/working/temp_rgb\"  # 临时存放RGB转换后的图像\noutput_zip = \"/kaggle/working/my_dataset-512x512.zip\"  # 最终输出的ZIP文件\n\n# 2. 创建临时目录\nos.makedirs(temp_rgb_dir, exist_ok=True)\n\n# 3. 批量转换图像为RGB格式\nimage_files = [f for f in os.listdir(input_dir) if f.lower().endswith(('.png', '.jpg', '.jpeg'))]\n\nfor filename in tqdm(image_files, desc=\"转换图像格式\"):\n    try:\n        # 打开图像\n        img_path = os.path.join(input_dir, filename)\n        with Image.open(img_path) as img:\n            # 转换为RGB（自动处理RGBA、P模式等）\n            if img.mode not in ('RGB', 'L'):  # 'L'是灰度模式\n                img = img.convert('RGB')\n            # 保存到临时目录\n            save_path = os.path.join(temp_rgb_dir, filename)\n            img.save(save_path)\n    except Exception as e:\n        print(f\"处理 {filename} 失败: {e}\")\n\n\n\n# 4. 使用转换后的RGB图像进行打包\ncommand = [\n    \"python\", \"dataset_tool.py\",\n    \"--source\", temp_rgb_dir,\n    \"--dest\", output_zip,\n    \"--resolution\", \"512x512\"\n]\n\nresult = subprocess.run(\n    command,\n    capture_output=True,\n    text=True\n)\n\n# 打印结果\nprint(\"\\n打包命令输出：\")\nprint(result.stdout)\nprint(\"错误信息：\")\nprint(result.stderr)\n\nif result.returncode == 0:\n    print(f\"\\n数据集打包成功，保存至：{output_zip}\")\nelse:\n    print(\"\\n数据集打包失败\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-28T10:03:09.417328Z","iopub.execute_input":"2025-09-28T10:03:09.417818Z","iopub.status.idle":"2025-09-28T10:03:14.003983Z","shell.execute_reply.started":"2025-09-28T10:03:09.417792Z","shell.execute_reply":"2025-09-28T10:03:14.003221Z"}},"outputs":[{"name":"stderr","text":"转换图像格式: 100%|██████████| 42/42 [00:03<00:00, 13.01it/s]\n","output_type":"stream"},{"name":"stdout","text":"\n打包命令输出：\n\n错误信息：\n\n  0%|          | 0/42 [00:00<?, ?it/s]\n 12%|█▏        | 5/42 [00:00<00:00, 48.61it/s]\n 24%|██▍       | 10/42 [00:00<00:00, 37.37it/s]\n 38%|███▊      | 16/42 [00:00<00:00, 45.62it/s]\n 55%|█████▍    | 23/42 [00:00<00:00, 51.23it/s]\n 69%|██████▉   | 29/42 [00:00<00:00, 50.18it/s]\n 83%|████████▎ | 35/42 [00:00<00:00, 47.41it/s]\n 98%|█████████▊| 41/42 [00:00<00:00, 49.28it/s]\n100%|██████████| 42/42 [00:00<00:00, 48.33it/s]\n\n\n数据集打包成功，保存至：/kaggle/working/my_dataset-512x512.zip\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"#替换train.py为正确版本\n\nimport shutil\nimport os\n\n\nsource_path = \"/kaggle/input/real-train-py/train.py\"  \ndestination_path = \"/kaggle/working/stylegan3/train.py\"\n\n# 确保目标目录存在\nos.makedirs(os.path.dirname(destination_path), exist_ok=True)\n\n# 复制并替换文件\nshutil.copy2(source_path, destination_path)\n\n# 验证替换是否成功\nprint(f\"文件已替换: {destination_path}\")\nprint(f\"替换后的文件大小: {os.path.getsize(destination_path)} 字节\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-28T10:03:19.161476Z","iopub.execute_input":"2025-09-28T10:03:19.162117Z","iopub.status.idle":"2025-09-28T10:03:19.176950Z","shell.execute_reply.started":"2025-09-28T10:03:19.162065Z","shell.execute_reply":"2025-09-28T10:03:19.176131Z"}},"outputs":[{"name":"stdout","text":"文件已替换: /kaggle/working/stylegan3/train.py\n替换后的文件大小: 15914 字节\n","output_type":"stream"}],"execution_count":9},{"cell_type":"code","source":"# 用2个GPU训练StyleGAN3-T\n\n# --outdir：训练结果输出目录\n# --cfg：模型配置（此处为stylegan3-t）\n# --data：数据集路径\n# --gpus：使用的GPU数量（Kaggle最大限制为2）\n# --batch：总批次大小（所有GPU合计）\n# --batch-gpu：每个GPU的子批次大小\n# --gamma：训练超参数（影响生成质量的平衡参数）\n# --mirror：是否启用数据镜像增强（1=启用，0=禁用）\n# --kimg：总训练图像数量（单位：千张）\n# --snap：快照保存间隔（单位：千张图像）\n!python train.py \\\n--outdir /kaggle/working/training \\\n--cfg stylegan3-t \\\n--data /kaggle/working/my_dataset-512x512.zip \\\n--gpus 2 \\\n--batch 16 \\\n--batch-gpu 8 \\\n--gamma 8.2 \\\n--aug ada \\\n--resume '/kaggle/input/140kimg-pkl/network-snapshot-000040(1).pkl' \\\n--mirror 1 \\\n--kimg 200 \\\n--snap 2 \\\n\n\n\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-28T10:05:04.209733Z","iopub.execute_input":"2025-09-28T10:05:04.210497Z","iopub.status.idle":"2025-09-28T14:36:14.300013Z","shell.execute_reply.started":"2025-09-28T10:05:04.210466Z","shell.execute_reply":"2025-09-28T14:36:14.298899Z"}},"outputs":[{"name":"stdout","text":"\nTraining options:\n{\n  \"G_kwargs\": {\n    \"class_name\": \"training.networks_stylegan3.Generator\",\n    \"z_dim\": 512,\n    \"w_dim\": 512,\n    \"mapping_kwargs\": {\n      \"num_layers\": 2\n    },\n    \"channel_base\": 32768,\n    \"channel_max\": 512,\n    \"magnitude_ema_beta\": 0.9994456359721023\n  },\n  \"D_kwargs\": {\n    \"class_name\": \"training.networks_stylegan2.Discriminator\",\n    \"block_kwargs\": {\n      \"freeze_layers\": 0\n    },\n    \"mapping_kwargs\": {},\n    \"epilogue_kwargs\": {\n      \"mbstd_group_size\": 4\n    },\n    \"channel_base\": 32768,\n    \"channel_max\": 512\n  },\n  \"G_opt_kwargs\": {\n    \"class_name\": \"torch.optim.Adam\",\n    \"betas\": [\n      0.0,\n      0.99\n    ],\n    \"eps\": 1e-08,\n    \"lr\": 0.0025\n  },\n  \"D_opt_kwargs\": {\n    \"class_name\": \"torch.optim.Adam\",\n    \"betas\": [\n      0.0,\n      0.99\n    ],\n    \"eps\": 1e-08,\n    \"lr\": 0.002\n  },\n  \"loss_kwargs\": {\n    \"class_name\": \"training.loss.StyleGAN2Loss\",\n    \"r1_gamma\": 8.2,\n    \"blur_init_sigma\": 0\n  },\n  \"data_loader_kwargs\": {\n    \"pin_memory\": true,\n    \"prefetch_factor\": 2,\n    \"num_workers\": 3\n  },\n  \"training_set_kwargs\": {\n    \"class_name\": \"training.dataset.ImageFolderDataset\",\n    \"path\": \"/kaggle/working/my_dataset-512x512.zip\",\n    \"use_labels\": false,\n    \"max_size\": 42,\n    \"xflip\": true,\n    \"resolution\": 512,\n    \"random_seed\": 0\n  },\n  \"num_gpus\": 2,\n  \"batch_size\": 16,\n  \"batch_gpu\": 8,\n  \"metrics\": [\n    \"fid50k_full\"\n  ],\n  \"total_kimg\": 200,\n  \"kimg_per_tick\": 4,\n  \"image_snapshot_ticks\": 2,\n  \"network_snapshot_ticks\": 2,\n  \"random_seed\": 0,\n  \"ema_kimg\": 5.0,\n  \"augment_kwargs\": {\n    \"class_name\": \"training.augment.AugmentPipe\",\n    \"xflip\": 1,\n    \"rotate90\": 1,\n    \"xint\": 1,\n    \"scale\": 1,\n    \"rotate\": 1,\n    \"aniso\": 1,\n    \"xfrac\": 1,\n    \"brightness\": 1,\n    \"contrast\": 1,\n    \"lumaflip\": 1,\n    \"hue\": 1,\n    \"saturation\": 1\n  },\n  \"ada_target\": 0.6,\n  \"resume_pkl\": \"/kaggle/input/140kimg-pkl/network-snapshot-000040(1).pkl\",\n  \"ada_kimg\": 100,\n  \"ema_rampup\": null,\n  \"run_dir\": \"/kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch16-gamma8.2\"\n}\n\nOutput directory:    /kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch16-gamma8.2\nNumber of GPUs:      2\nBatch size:          16 images\nTraining duration:   200 kimg\nDataset path:        /kaggle/working/my_dataset-512x512.zip\nDataset size:        42 images\nDataset resolution:  512\nDataset labels:      False\nDataset x-flips:     True\n\nCreating output directory...\nLaunching processes...\nLoading training set...\n/usr/local/lib/python3.11/dist-packages/torch/utils/data/sampler.py:77: UserWarning: `data_source` argument is not used and will be removed in 2.2.0.You may still have custom implementation that utilizes it.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/torch/utils/data/sampler.py:77: UserWarning: `data_source` argument is not used and will be removed in 2.2.0.You may still have custom implementation that utilizes it.\n  warnings.warn(\n\nNum images:  84\nImage shape: [3, 512, 512]\nLabel shape: [0]\n\nConstructing networks...\nResuming from \"/kaggle/input/140kimg-pkl/network-snapshot-000040(1).pkl\"\nSetting up PyTorch plugin \"bias_act_plugin\"... /usr/local/lib/python3.11/dist-packages/torch/utils/cpp_extension.py:2059: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. \nIf this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].\n  warnings.warn(\nDone.\nSetting up PyTorch plugin \"filtered_lrelu_plugin\"... /usr/local/lib/python3.11/dist-packages/torch/utils/cpp_extension.py:2059: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. \nIf this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].\n  warnings.warn(\nDone.\n\nGenerator                     Parameters  Buffers  Output shape        Datatype\n---                           ---         ---      ---                 ---     \nmapping.fc0                   262656      -        [8, 512]            float32 \nmapping.fc1                   262656      -        [8, 512]            float32 \nmapping                       -           512      [8, 16, 512]        float32 \nsynthesis.input.affine        2052        -        [8, 4]              float32 \nsynthesis.input               262144      1545     [8, 512, 36, 36]    float32 \nsynthesis.L0_36_512.affine    262656      -        [8, 512]            float32 \nsynthesis.L0_36_512           2359808     25       [8, 512, 36, 36]    float32 \nsynthesis.L1_36_512.affine    262656      -        [8, 512]            float32 \nsynthesis.L1_36_512           2359808     25       [8, 512, 36, 36]    float32 \nsynthesis.L2_52_512.affine    262656      -        [8, 512]            float32 \nsynthesis.L2_52_512           2359808     37       [8, 512, 52, 52]    float32 \nsynthesis.L3_52_512.affine    262656      -        [8, 512]            float32 \nsynthesis.L3_52_512           2359808     25       [8, 512, 52, 52]    float32 \nsynthesis.L4_84_512.affine    262656      -        [8, 512]            float32 \nsynthesis.L4_84_512           2359808     37       [8, 512, 84, 84]    float16 \nsynthesis.L5_84_512.affine    262656      -        [8, 512]            float32 \nsynthesis.L5_84_512           2359808     25       [8, 512, 84, 84]    float16 \nsynthesis.L6_148_512.affine   262656      -        [8, 512]            float32 \nsynthesis.L6_148_512          2359808     37       [8, 512, 148, 148]  float16 \nsynthesis.L7_148_483.affine   262656      -        [8, 512]            float32 \nsynthesis.L7_148_483          2226147     25       [8, 483, 148, 148]  float16 \nsynthesis.L8_276_323.affine   247779      -        [8, 483]            float32 \nsynthesis.L8_276_323          1404404     37       [8, 323, 276, 276]  float16 \nsynthesis.L9_276_215.affine   165699      -        [8, 323]            float32 \nsynthesis.L9_276_215          625220      25       [8, 215, 276, 276]  float16 \nsynthesis.L10_532_144.affine  110295      -        [8, 215]            float32 \nsynthesis.L10_532_144         278784      37       [8, 144, 532, 532]  float16 \nsynthesis.L11_532_96.affine   73872       -        [8, 144]            float32 \nsynthesis.L11_532_96          124512      25       [8, 96, 532, 532]   float16 \nsynthesis.L12_532_64.affine   49248       -        [8, 96]             float32 \nsynthesis.L12_532_64          55360       25       [8, 64, 532, 532]   float16 \nsynthesis.L13_512_64.affine   32832       -        [8, 64]             float32 \nsynthesis.L13_512_64          36928       25       [8, 64, 512, 512]   float16 \nsynthesis.L14_512_3.affine    32832       -        [8, 64]             float32 \nsynthesis.L14_512_3           195         1        [8, 3, 512, 512]    float16 \nsynthesis                     -           -        [8, 3, 512, 512]    float32 \n---                           ---         ---      ---                 ---     \nTotal                         24873519    2468     -                   -       \n\nSetting up PyTorch plugin \"upfirdn2d_plugin\"... /usr/local/lib/python3.11/dist-packages/torch/utils/cpp_extension.py:2059: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. \nIf this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].\n  warnings.warn(\nDone.\n\nDiscriminator  Parameters  Buffers  Output shape        Datatype\n---            ---         ---      ---                 ---     \nb512.fromrgb   256         16       [8, 64, 512, 512]   float16 \nb512.skip      8192        16       [8, 128, 256, 256]  float16 \nb512.conv0     36928       16       [8, 64, 512, 512]   float16 \nb512.conv1     73856       16       [8, 128, 256, 256]  float16 \nb512           -           16       [8, 128, 256, 256]  float16 \nb256.skip      32768       16       [8, 256, 128, 128]  float16 \nb256.conv0     147584      16       [8, 128, 256, 256]  float16 \nb256.conv1     295168      16       [8, 256, 128, 128]  float16 \nb256           -           16       [8, 256, 128, 128]  float16 \nb128.skip      131072      16       [8, 512, 64, 64]    float16 \nb128.conv0     590080      16       [8, 256, 128, 128]  float16 \nb128.conv1     1180160     16       [8, 512, 64, 64]    float16 \nb128           -           16       [8, 512, 64, 64]    float16 \nb64.skip       262144      16       [8, 512, 32, 32]    float16 \nb64.conv0      2359808     16       [8, 512, 64, 64]    float16 \nb64.conv1      2359808     16       [8, 512, 32, 32]    float16 \nb64            -           16       [8, 512, 32, 32]    float16 \nb32.skip       262144      16       [8, 512, 16, 16]    float32 \nb32.conv0      2359808     16       [8, 512, 32, 32]    float32 \nb32.conv1      2359808     16       [8, 512, 16, 16]    float32 \nb32            -           16       [8, 512, 16, 16]    float32 \nb16.skip       262144      16       [8, 512, 8, 8]      float32 \nb16.conv0      2359808     16       [8, 512, 16, 16]    float32 \nb16.conv1      2359808     16       [8, 512, 8, 8]      float32 \nb16            -           16       [8, 512, 8, 8]      float32 \nb8.skip        262144      16       [8, 512, 4, 4]      float32 \nb8.conv0       2359808     16       [8, 512, 8, 8]      float32 \nb8.conv1       2359808     16       [8, 512, 4, 4]      float32 \nb8             -           16       [8, 512, 4, 4]      float32 \nb4.mbstd       -           -        [8, 513, 4, 4]      float32 \nb4.conv        2364416     16       [8, 512, 4, 4]      float32 \nb4.fc          4194816     -        [8, 512]            float32 \nb4.out         513         -        [8, 1]              float32 \n---            ---         ---      ---                 ---     \nTotal          28982849    480      -                   -       \n\nSetting up augmentation...\nDistributing across 2 GPUs...\nSetting up training phases...\nExporting sample images...\n/usr/local/lib/python3.11/dist-packages/torch/utils/cpp_extension.py:2059: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. \nIf this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/torch/utils/cpp_extension.py:2059: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. \nIf this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].\n  warnings.warn(\nInitializing logs...\n2025-09-28 10:08:28.995643: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n/usr/local/lib/python3.11/dist-packages/torch/utils/cpp_extension.py:2059: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. \nIf this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].\n  warnings.warn(\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1759054109.232100     129 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1759054109.300685     129 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\nTraining for 200 kimg...\n\ntick 0     kimg 0.0      time 5m 10s       sec/tick 99.2    sec/kimg 6196.89 maintenance 211.3  cpumem 3.39   gpumem 12.16  reserved 12.52  augment 0.000\nEvaluating metrics...\n{\"results\": {\"fid50k_full\": 282.41444559236436}, \"metric\": \"fid50k_full\", \"total_time\": 2426.2284021377563, \"total_time_str\": \"40m 26s\", \"num_gpus\": 2, \"snapshot_pkl\": \"network-snapshot-000000.pkl\", \"timestamp\": 1759056666.4738374}\ntick 1     kimg 4.0      time 1h 03m 09s   sec/tick 1032.8  sec/kimg 258.19  maintenance 2445.8 cpumem 3.92   gpumem 13.83  reserved 14.14  augment 0.036\ntick 2     kimg 8.0      time 1h 20m 25s   sec/tick 1035.8  sec/kimg 258.94  maintenance 0.4    cpumem 3.92   gpumem 8.68   reserved 11.36  augment 0.072\nEvaluating metrics...\n{\"results\": {\"fid50k_full\": 293.43120681654693}, \"metric\": \"fid50k_full\", \"total_time\": 2401.3530502319336, \"total_time_str\": \"40m 01s\", \"num_gpus\": 2, \"snapshot_pkl\": \"network-snapshot-000008.pkl\", \"timestamp\": 1759061155.3573954}\ntick 3     kimg 12.0     time 2h 18m 02s   sec/tick 1037.1  sec/kimg 259.27  maintenance 2420.0 cpumem 4.11   gpumem 8.67   reserved 11.36  augment 0.110\ntick 4     kimg 16.0     time 2h 35m 22s   sec/tick 1039.2  sec/kimg 259.79  maintenance 0.4    cpumem 4.11   gpumem 8.72   reserved 11.36  augment 0.146\nEvaluating metrics...\n{\"results\": {\"fid50k_full\": 284.2458003118093}, \"metric\": \"fid50k_full\", \"total_time\": 2395.655288696289, \"total_time_str\": \"39m 56s\", \"num_gpus\": 2, \"snapshot_pkl\": \"network-snapshot-000016.pkl\", \"timestamp\": 1759065646.3652992}\ntick 5     kimg 20.0     time 3h 32m 55s   sec/tick 1038.9  sec/kimg 259.72  maintenance 2414.4 cpumem 3.95   gpumem 8.76   reserved 11.36  augment 0.183\ntick 6     kimg 24.0     time 3h 50m 14s   sec/tick 1038.2  sec/kimg 259.56  maintenance 0.4    cpumem 3.95   gpumem 8.73   reserved 11.36  augment 0.220\nEvaluating metrics...\n{\"results\": {\"fid50k_full\": 266.3201595610574}, \"metric\": \"fid50k_full\", \"total_time\": 2406.2024443149567, \"total_time_str\": \"40m 06s\", \"num_gpus\": 2, \"snapshot_pkl\": \"network-snapshot-000024.pkl\", \"timestamp\": 1759070148.634582}\n^C\n\nAborted!\n","output_type":"stream"}],"execution_count":11},{"cell_type":"code","source":"!zip -r /kaggle/working/training.zip /kaggle/working/training","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-28T09:31:23.708478Z","iopub.execute_input":"2025-09-28T09:31:23.708753Z","iopub.status.idle":"2025-09-28T09:32:20.116433Z","shell.execute_reply.started":"2025-09-28T09:31:23.708703Z","shell.execute_reply":"2025-09-28T09:32:20.115753Z"},"collapsed":true,"jupyter":{"outputs_hidden":true}},"outputs":[{"name":"stdout","text":"updating: kaggle/working/training/ (stored 0%)\nupdating: kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch8-gamma8.2/ (stored 0%)\nupdating: kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch8-gamma8.2/network-snapshot-000000.pkl (deflated 7%)\nupdating: kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch8-gamma8.2/metric-fid50k_full.jsonl (deflated 64%)\nupdating: kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch8-gamma8.2/events.out.tfevents.1759034444.f8800b0da2a2.3659.0 (deflated 73%)\nupdating: kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch8-gamma8.2/fakes000040.png (deflated 0%)\nupdating: kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch8-gamma8.2/reals.png (deflated 0%)\nupdating: kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch8-gamma8.2/training_options.json (deflated 63%)\nupdating: kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch8-gamma8.2/network-snapshot-000040.pkl (deflated 7%)\nupdating: kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch8-gamma8.2/log.txt (deflated 80%)\nupdating: kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch8-gamma8.2/network-snapshot-000020.pkl (deflated 7%)\nupdating: kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch8-gamma8.2/fakes000000.png (deflated 0%)\nupdating: kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch8-gamma8.2/fakes000020.png (deflated 0%)\nupdating: kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch8-gamma8.2/stats.jsonl (deflated 80%)\nupdating: kaggle/working/training/00000-stylegan3-t-my_dataset-512x512-gpus2-batch8-gamma8.2/fakes_init.png (deflated 0%)\n","output_type":"stream"}],"execution_count":15}]}